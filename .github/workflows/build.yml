name: CI-dev-pipeline
on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: lucasalt/act_base:latest
    env:
      S3_ACCESS_KEY_ID: myawskey
      S3_SECRET_ACCESS_KEY: myawssecret
      S3_ENDPOINT: http://s3:9000
      S3_BUCKET: my-bucket
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: pw
      POSTGRES_DATABASE: test_db
      POSTGRES_PORT: '5432'
      POSTGRES_HOST: postgres
      ENCRYPTION_PASSWORD: 'encryption_password'
    steps:
      - uses: actions/checkout@v4

      - name: Chmod test-files for windows
        run: chmod -R +x ./test

      - name: Set up
        run: ./test/setup.sh

      - name: Test backup
        run: ./test/test_backup.sh

      - name: Test restore
        run: ./test/test_restore.sh
        env:
          RESTORE: "latest"

      - name: Tear down
        run: ./test/tear_down.sh

      - name: Set up Scheduled
        run: ./test/setup.sh

      - name: Test schedule backup
        run: ./test/test_backup_schedule.sh
        env:
          SCHEDULE: "@every 5s"
          DELETE_OLDER_THAN: "15 seconds ago"

      - name: Test restore of scheduled backup
        run: ./test/test_restore.sh
        env:
          RESTORE: "latest"

      - name: Tear down
        run: ./test/tear_down.sh

      - name: Release
        if: ${{ !env.ACT }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build"
          files: |
            README.md

      - name: Log in to Docker Hub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: ${{ !env.ACT }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: richardwiden/postgresql-backup-s3

      - name: Set up Docker Buildx
        if: ${{ !env.ACT }}
        id: buildx
        uses: docker/setup-buildx-action@v3


      - name: Build and push Docker image
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v5
        with:
          context: docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Build and push Docker image
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v5
        with:
          context: docker
          push: true
          build-args: "POSTGRES_BASE_IMAGE=postgres:15-alpine"
          tags: richardwiden/postgresql-backup-s3:15
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Update repo description
        if: ${{ !env.ACT }}
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: richardwiden/postgresql-backup-s3
          readme-filepath: ./README.md
